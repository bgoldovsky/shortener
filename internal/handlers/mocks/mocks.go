// Code generated by MockGen. DO NOT EDIT.
// Source: handlers.go

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	reflect "reflect"

	models "github.com/bgoldovsky/shortener/internal/app/models"
	gomock "github.com/golang/mock/gomock"
)

// MockurlService is a mock of urlService interface.
type MockurlService struct {
	ctrl     *gomock.Controller
	recorder *MockurlServiceMockRecorder
}

// MockurlServiceMockRecorder is the mock recorder for MockurlService.
type MockurlServiceMockRecorder struct {
	mock *MockurlService
}

// NewMockurlService creates a new mock instance.
func NewMockurlService(ctrl *gomock.Controller) *MockurlService {
	mock := &MockurlService{ctrl: ctrl}
	mock.recorder = &MockurlServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockurlService) EXPECT() *MockurlServiceMockRecorder {
	return m.recorder
}

// Expand mocks base method.
func (m *MockurlService) Expand(id string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Expand", id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Expand indicates an expected call of Expand.
func (mr *MockurlServiceMockRecorder) Expand(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Expand", reflect.TypeOf((*MockurlService)(nil).Expand), id)
}

// GetUrls mocks base method.
func (m *MockurlService) GetUrls() ([]models.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrls")
	ret0, _ := ret[0].([]models.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrls indicates an expected call of GetUrls.
func (mr *MockurlServiceMockRecorder) GetUrls() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrls", reflect.TypeOf((*MockurlService)(nil).GetUrls))
}

// Shorten mocks base method.
func (m *MockurlService) Shorten(url string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Shorten", url)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Shorten indicates an expected call of Shorten.
func (mr *MockurlServiceMockRecorder) Shorten(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shorten", reflect.TypeOf((*MockurlService)(nil).Shorten), url)
}
